version: '3.8'

services:

  nginx:
    build:
      context: .
      dockerfile: dockerfile.nginx
    ports:
      - '80:80'

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.1
    environment:
      - node.name=quadzig-node
      - cluster.name=es-quadzig-cluster
      - discovery.type=single-node
      - ELASTIC_USER=quadzig
      - ELASTIC_PASSWORD=quadzig123
      - xpack.security.enabled=false
     # - xpack.security.transport.ssl.enabled=true
     # - http.cors.enabled=true
     # - http.cors.allow-origin=*
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200/_cluster/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - data:/usr/share/elasticsearch/data
    ports:
      - '9200:9200'
    env_file:
      - .env
#    networks:
#      - elastic

#  kibana:
#    image: docker.elastic.co/kibana/kibana:8.12.1
#    environment:
#      - node.name=kibana-quadzig
#      - cluster.name=kib-quadzig-cluster
#      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
#    ports:
#      - '5601:5601'
#    networks:
#      - elastic
#    depends_on:
#      - elasticsearch
  redis:
    image: redis:7-alpine
    restart: always
    command: redis-server
    ports:
      - '6379:6379'
    volumes:
      - redis:/data

  sidekiq:
    depends_on:
      elasticsearch:
        condition: service_healthy
      redis:
        condition: service_started
      db:
        condition: service_started
    build:
      context: .
      dockerfile: dockerfile.bg
    volumes:
      - .:/myapp
    env_file:
      - .env

  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: secret
    restart: always
    volumes:
      - postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s


  web:
    build:
      context: .
      dockerfile: dockerfile.app
    environment:
      RAILS_ENV: development
      DB_USERNAME: quadzig
      DB_PASSWORD: password
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: quadzig_development
    volumes:
      - .:/myapp
    depends_on:
      - db
      - sidekiq
      - redis
      - elasticsearch
    ports:
      - '3000:3000'
    restart: on-failure:3
    env_file:
      - .env

volumes:
  data:
    driver: local
  myapp:
  postgres:
  redis:

#networks:
#  elastic:
#     driver: bridge
